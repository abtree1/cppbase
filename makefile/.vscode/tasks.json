{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "build-c", //task的名字,调用方式就是 task build
            "command": "make.exe", //会在命令行中调用此命令
            "args": [ //调用上述 make.exe 传递给它的参数
                "-j6",
                "target=${workspaceRootFolderName}_C_release.exe", //${workspaceRootFolderName} 会被替换成 根目录 即:vscode_c_demo
                "TYPE=C" //指定文件类型
            ],
            "type": "shell",
            "problemMatcher": []
        }, //此命令等效展开为:make.exe target=vscode_c_demo.exe
        {
            "label": "build-c-debug",
            "command": "make.exe",
            "args": [
                "-j6",
                "target=${workspaceRootFolderName}_C_debug.exe",
                "TYPE=C", //指定文件类型
                "DEBUG=-g", //添加debug 参数 使gcc 生成调试信息
                "PREDEF=_DEBUG" //相当于在程序中定义了一个宏定义 #define Debug
            ],
            "type": "shell"
        }, //此命令等效展开为:make.exe target=vscode_c_demo.exe DEBUG=-g PREDEF=Debug
        {
            "label": "c-clean",
            "command": "make.exe",
            "args": [
                "-j6",
                "clean",
                "TYPE=C", //指定文件类型
                "target=${workspaceRootFolderName}*.exe"
            ],
            "type": "shell",
            "problemMatcher": []
        },
        {
            "label": "build-cpp", //task的名字,调用方式就是 task build
            "command": "make.exe", //会在命令行中调用此命令
            "args": [ //调用上述 make.exe 传递给它的参数
                "-j6",
                "target=${workspaceRootFolderName}_CPP_release.exe", //${workspaceRootFolderName} 会被替换成 根目录 即:vscode_c_demo
                "TYPE=C++" //指定文件类型
            ],
            "type": "shell",
            "problemMatcher": []
        }, //此命令等效展开为:make.exe target=vscode_c_demo_CPP_release.exe
        {
            "label": "build-cpp-debug",
            "command": "make.exe",
            "args": [
                "-j6",
                "target=${workspaceRootFolderName}_CPP_debug.exe",
                "TYPE=C++", //指定文件类型
                "DEBUG=-g", //添加debug 参数 使gcc 生成调试信息
                "PREDEF=_DEBUG" //相当于在程序中定义了一个宏定义 #define Debug
            ],
            "type": "shell"
        }, //此命令等效展开为:make.exe target=vscode_c_demo_CPP_debug.exe DEBUG=-g PREDEF=Debug
        {
            "label": "cpp-clean",
            "command": "make.exe",
            "args": [
                "-j6",
                "clean",
                "TYPE=C", //指定文件类型
                "target=${workspaceRootFolderName}*.exe"
            ],
            "type": "shell",
            "problemMatcher": []
        }, //此命令等效展开为:make.exe clean target=vscode_c_demo.exe
    ]
}