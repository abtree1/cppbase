{
    "tasks": [
        {
            "label": "Compile", // 任务名称，与launch.json的preLaunchTask相对应
            "command": "g++.exe", // 要使用的编译器
            "args": [
                "${file}",
                "-o", // 指定输出文件名，不加该参数则默认输出a.exe
                "${fileDirname}/${fileBasenameNoExtension}.exe",
                "-g", // 生成和调试有关的信息
                "-Wall", // 开启额外警告
                "-static-libgcc", // 静态链接
                //"-fcolor-diagnostics",
                //"--target=x86_64-w64-mingw", // 默认target为msvc，不加这一条就会找不到头文件
                "-std=c++2a" // C语言最新标准为c11，或根据自己的需要进行修改
            ], // 编译命令参数
            "type": "cppbuild",
            "group": {
                "kind": "build",
                "isDefault": true // 设为false可做到一个tasks.json配置多个编译指令，需要自己修改本文件，我这里不多提
            },
            "presentation": {
                "echo": true,
                "reveal": "always", // 在“终端”中显示编译信息的策略，可以为always，silent，never。具体参见VSC的文档
                "focus": false, // 设为true后可以使执行task时焦点聚集在终端，但对编译c和c++来说，设为true没有意义
                "panel": "shared" // 不同的文件的编译信息共享一个终端面板
            },
            "problemMatcher": [
                "$gcc"
            ], // 如果你不使用clang，去掉前面的注释符，并在上一条之后加个逗号。照着我的教程做的不需要改（也可以把这行删去)
            "detail": "compiler: g++.exe"
        },
        {
            "type": "cppbuild",
            "label": "g++task",
            "command": "F:/msys64/mingw64/bin/g++.exe",
            "args": [
                "${file}",
                "-fdiagnostics-color=always",
                "-g",
                "-o","${fileDirname}\\${fileBasenameNoExtension}.exe",
                "-static-libgcc",
                //指定添加的include目录
                "-I","G:/cpp/ege/EGE20.08/include",
                //指定添加的lib目录
                "-L","G:/cpp/ege/EGE20.08/lib/mingw64",
                //需要添加的宏
                "-D","_UNICODE","-D","_DEBUG",
                "-include",
                "${workspaceFolder}/Region/mainframe.cpp"
                ,"-m64"
                //下面是EGE需要的添加项
                ,"-lgraphics64","-lgdiplus","-luuid","-lmsimg32","-lgdi32","-limm32","-lole32","-loleaut32","-lwinmm"
                ,"-std=c++11"
            ],
            "options": {
                "cwd": "F:/msys64/mingw64/bin"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "调试器生成的任务。"
        }
    ],
    "version": "2.0.0"
}